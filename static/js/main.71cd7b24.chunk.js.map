{"version":3,"sources":["coin.js","cryptoTracker.js","App.js","reportWebVitals.js","index.js"],"names":["Coin","image","name","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","CryptoTracker","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAkCeA,EA/BF,SAAC,GAA4D,IAA3DC,EAA0D,EAA1DA,MAAMC,EAAoD,EAApDA,KAAKC,EAA+C,EAA/CA,OAAOC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,OAAOC,EAA2B,EAA3BA,YAAYC,EAAe,EAAfA,UACtD,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKR,EAAOS,IAAI,WACrB,6BAAKR,IACL,oBAAGM,UAAU,cAAb,UAA4BL,EAA5B,UAIJ,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,eAA6BJ,KAC7B,oBAAGI,UAAU,cAAb,eAA8BH,EAAOM,oBACpCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OACC,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAET,oBAAGJ,UAAU,iBAAb,uBACeD,EAAUI,6BCoC1BE,EArDO,WAClB,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAcC,EAAd,KAGAC,qBAAU,WACNC,IAAMC,IAAI,4HAEbC,MAAK,SAAAC,GACFP,EAASO,EAAIC,SAGhBC,OAAM,SAAAC,GAAK,OAAEC,QAAQC,IAAI,cACxB,IACF,IAGMC,EAAgBd,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAK7B,KAAK8B,cAAcC,SAAShB,EAAOe,kBAGnF,OACI,sBAAKxB,UAAU,WAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAIA,UAAU,YAAd,+BACA,+BACI,uBAAO0B,KAAK,OAAOC,YAAY,kBAC/B3B,UAAU,aAAa4B,SAZlB,SAAAC,GACjBnB,EAAUmB,EAAEC,OAAOC,eAiBdV,EAAcW,KAAI,SAAAT,GACf,OACI,cAAC,EAAD,CACA7B,KAAM6B,EAAK7B,KACXD,MAAO8B,EAAK9B,MACZE,OAAQ4B,EAAK5B,OACbI,UAAWwB,EAAKU,WAChBrC,MAAO2B,EAAKW,cACZpC,YAAcyB,EAAKY,4BACnBtC,OAAQ0B,EAAKa,cAPFb,EAAKc,W,MC5BrBC,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.71cd7b24.chunk.js","sourcesContent":["import React from 'react'\r\nimport './crypto.css'\r\n\r\nconst Coin = ({image,name,symbol,price,volume,priceChange,marketcap}) => {\r\n    return (\r\n        <div className='coin-container'>\r\n            <div className='coin-row'>\r\n                <div className='coin'>\r\n                    <img src={image} alt='Crypto'/>\r\n                    <h1>{name}</h1>\r\n                    <p className='coin-symbol'>{symbol} </p>\r\n\r\n\r\n                </div>\r\n                <div className='coin-data'>\r\n                    <p className='coin-price'> ${price}</p>\r\n                    <p className='coin-volume'> ${volume.toLocaleString()}</p>\r\n                    {priceChange < 0 ? (\r\n                        <p className='coin-percent red'>{priceChange.toFixed(2)}%</p>\r\n                    ) : (<p className='coin-percent green'>{priceChange.toFixed(2)}%</p>)\r\n                }\r\n                <p className='coin-marketcap'>\r\n                    Mkt Cap: ${marketcap.toLocaleString()}\r\n\r\n                </p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coin\r\n","import React, {useState,useEffect} from 'react'\r\nimport './crypto.css'\r\nimport axios from 'axios'\r\nimport Coin from './coin'\r\n\r\nconst CryptoTracker = () => {\r\n    const [coins,setCoins]=useState([])\r\n    const [search,setSearch] = useState('')\r\n\r\n\r\n    useEffect(()=>{\r\n        axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\r\n    \r\n    .then(res=>{\r\n        setCoins(res.data)\r\n\r\n    })\r\n    .catch(error=>console.log('error'))\r\n    },[]);\r\n    const handleChange = e =>{\r\n        setSearch(e.target.value)\r\n    }\r\n    const filteredCoins = coins.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase())\r\n    )\r\n\r\n    return (\r\n        <div className='coin-app'>\r\n            <div className='coin-search'>\r\n                <h1 className='coin-text'>Search a Currency</h1>\r\n                <form>\r\n                    <input type='text' placeholder='Search Currency' \r\n                    className='coin-input' onChange={handleChange}\r\n                    />\r\n\r\n                </form>\r\n\r\n            </div>\r\n            {filteredCoins.map(coin=>{\r\n                return(\r\n                    <Coin key={coin.id} \r\n                    name={coin.name} \r\n                    image={coin.image} \r\n                    symbol={coin.symbol}\r\n                    marketcap={coin.market_cap}\r\n                    price={coin.current_price}\r\n                    priceChange ={coin.price_change_percentage_24h}\r\n                    volume={coin.total_volume}\r\n\r\n                    />\r\n                )\r\n            })}\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CryptoTracker;\r\n","import CryptoTracker from './cryptoTracker';\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n    <CryptoTracker/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}